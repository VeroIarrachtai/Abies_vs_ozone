View(results_DESeq2_rt)
View(results_Edge_rt)
View(results_Edge)
View(results_DESeq2_rt)
View(results_Edge_rt)
View(results_DESeq2_rt)
View(results_Edge_rt)
View(results_DESeq2_rt)
# Make table with over and down expressed in TOLERANTS
overxpress_Ds2 <- results_DESeq2_rt[results_DESeq2_rt[,"padj"]< 0.05 & results_DESeq2_rt[,"log2FoldChange"]> 1, ]
downxpress_Ds2 <- results_DESeq2_rt[results_DESeq2_rt[,"padj"]< 0.05 & results_DESeq2_rt[,"log2FoldChange"]< -1, ]
overxpress_Ed <- results_Edge_rt[results_Edge_rt[,"FDR"]< 0.05 & results_Edge_rt[,"logFC"]> 1, ]
downxpress_Ed <- results_Edge_rt[results_Edge_rt[,"FDR"]< 0.05 & results_Edge_rt[,"logFC"]< -1, ]
genesDEcomun_over <- intersect(rownames(overxpress_Ds2),rownames(overxpress_Ed))
genesDEcomun_down <- intersect(rownames(downxpress_Ds2),rownames(downxpress_Ed))
comun_genes_od <- c(genesDEcomun_over,genesDEcomun_down)
comun_genes_od
genesDEcomun_over
genesDEcomun_down
comun_genes_od <- c(genesDEcomun_over,genesDEcomun_down)
comun_genes_od
# PLOT GENERAL
# To create column with row name
results_DESeq2_rt$rownames <- rownames(results_DESeq2_rt)
results_Edge_rt$rownames <- rownames(results_Edge_rt)
View(results_DESeq2_rt)
# To create new data frame with differential expression data (DESeq2 and edgeR)
df_general<- merge(results_DESeq2_rt, results_Edge_rt, by = "rownames",  all.x=TRUE)
colnames(df_general)<- c( "rownames","log2FoldChange_D2","pvalue_D2","padj_D2" ,
"sig_D2", "sigadj_D2","TDE_D2","logFC_ER","PValue_ER",
"FDR_ER", "sig_ER", "sigadj_ER","TDE_ER")
View(df_general)
df_general$color <- ifelse((df_general$TDE_D2 == TRUE) & (df_general$TDE_ER == TRUE), "Col_1", #DESeq2 and EdgeR
ifelse((df_general$TDE_D2 == TRUE) & (df_general$TDE_ER == FALSE), "Col_2", # Only DESeq2
ifelse((df_general$TDE_D2 == FALSE) & (df_general$TDE_ER == TRUE), "Col_3", # Only EdgeR
ifelse((df_general$TDE_D2 == FALSE) & (df_general$TDE_ER == FALSE), "Col_4", "Col_5"))))# No Differential Expression
View(df_general)
rownames(df_general)<- df_general$rownames
# Plot Volcano plot
ggplot(df_general, aes(x=log2FoldChange_D2, y=sig_D2)) +
geom_point(aes(colour =  color ),size =3.5)+
scale_color_manual(values=c("#cd77ca", # purple D2 and ER
"#49cfd8", # blue Only D2
"#cdbd3a", # yellow Only ER
"grey",    # grey
"black"))+ # black
xlab("log2 fold change")+
ylab("-log10 (P value)")+
theme_light(base_size = 10)+
theme(legend.position = "none")+
geom_hline(yintercept = -log10(0.05), colour = "black", linetype = "dashed", size = 0.25) + # Horizontal significance cut-off line.
geom_vline(xintercept = 1, colour = "black", linetype = "dashed", size = 0.25)+  # Vertical significance cut-off line (+).
geom_vline(xintercept = -1, colour = "black", linetype = "dashed", size = 0.25)  # Vertical significance cut-off line (+).
ggsave("../../outputs/8_1_VP_General_sinN_C_TvsD.png")
D2_ER_genes <-subset(df_general, subset= color == "Col_1")
D2_ER_genes$rownames
D2_genes <-subset(df_general, subset= color == "Col_2")
D2_genes$rownames
ER_genes <-subset(df_general, subset= color == "Col_3")
ER_genes$rownames
D2_ER_genes
View(downxpress_Ds2)
#Load libraries
library(ggplot2)
library(ggrepel)
#Load data DESeq2 and EdgeR
results_DESeq2<- read.delim("../../data/DGE/DESeq2_TSvsTC_FDR_5.txt") ## TENGO ESTO 2 VECES EN LA MISMA TABLA
results_DESeq2<- results_DESeq2[,1:6]
results_Edge<- read.delim("../../data/DGE/EdgeR_TSvsTC_FDR_5.txt")
# Remake tables with info that I want
results_DESeq2_rt <- data.frame(results_DESeq2[,c(2,5,6)])
results_Edge_rt <- data.frame(results_Edge[,c(1,3,4)])
results_DESeq2_rt$sig <- -log10(results_DESeq2$pvalue) ##Create a column with aditional info of FDR (padj)##
results_DESeq2_rt$sigadj <- -log10(results_DESeq2$padj) ##Create a column with aditional info of FDR (padj)##
results_Edge_rt$sig <- -log10(results_Edge$PValue) ##Create a column with aditional info of FDR (padj)##
results_Edge_rt$sigadj <- -log10(results_Edge$FDR) ##Create a column with aditional info of FDR (padj)##
##Create a column with colors depending p-adj##
results_DESeq2_rt$TDE <- (results_DESeq2_rt$padj< 0.05) & (abs(results_DESeq2_rt$log2FoldChange) > 1)
results_Edge_rt$TDE <- (results_Edge_rt$FDR< 0.05) & (abs(results_Edge_rt$logFC) > 1)
# Plot Volcano plot
# Make table with over and down expressed
overxpress_Ds2 <- results_DESeq2_rt[results_DESeq2_rt[,"padj"]< 0.05 & results_DESeq2_rt[,"log2FoldChange"]> 1, ]
downxpress_Ds2 <- results_DESeq2_rt[results_DESeq2_rt[,"padj"]< 0.05 & results_DESeq2_rt[,"log2FoldChange"]< -1, ]
overxpress_Ed <- results_Edge_rt[results_Edge_rt[,"FDR"]< 0.05 & results_Edge_rt[,"logFC"]> 1, ]
downxpress_Ed <- results_Edge_rt[results_Edge_rt[,"FDR"]< 0.05 & results_Edge_rt[,"logFC"]< -1, ]
# Obtain comun genes
genesDEcomun_over <- intersect(rownames(overxpress_Ds2),rownames(overxpress_Ed))
genesDEcomun_down <- intersect(rownames(downxpress_Ds2),rownames(downxpress_Ed))
comun_genes_od <- c(genesDEcomun_over,genesDEcomun_down)
comun_genes_od
# PLOT GENERAL
# To create column with row name
results_DESeq2_rt$rownames <- rownames(results_DESeq2_rt)
results_Edge_rt$rownames <- rownames(results_Edge_rt)
# To create new data frame with differential expression data (DESeq2 and edgeR)
df_general<- merge(results_DESeq2_rt, results_Edge_rt, by = "rownames",  all.x=TRUE)
colnames(df_general)<- c( "rownames","log2FoldChange_D2","pvalue_D2","padj_D2" ,
"sig_D2", "sigadj_D2","TDE_D2","logFC_ER","PValue_ER",
"FDR_ER", "sig_ER", "sigadj_ER","TDE_ER")
df_general$color <- ifelse((df_general$TDE_D2 == TRUE) & (df_general$TDE_ER == TRUE), "Col_1", #DESeq2 and EdgeR
ifelse((df_general$TDE_D2 == TRUE) & (df_general$TDE_ER == FALSE), "Col_2", # Only DESeq2
ifelse((df_general$TDE_D2 == FALSE) & (df_general$TDE_ER == TRUE), "Col_3", # Only EdgeR
ifelse((df_general$TDE_D2 == FALSE) & (df_general$TDE_ER == FALSE), "Col_4", "Col_5"))))# No Differential Expression
rownames(df_general)<- df_general$rownames
# Plot Volcano plot
ggplot(df_general, aes(x=log2FoldChange_D2, y=sig_D2)) +
geom_point(aes(colour =  color ),size =3.5)+
scale_color_manual(values=c("#cd77ca", # purple D2 and ER
"#49cfd8", # blue Only D2
"#cdbd3a", # yellow Only ER
"grey",    # grey
"black"))+ # black
xlab("log2 fold change")+
ylab("-log10 (P value)")+
theme_light(base_size = 10)+
theme(legend.position = "none")+
geom_hline(yintercept = -log10(0.05), colour = "black", linetype = "dashed", size = 0.25) + # Horizontal significance cut-off line.
geom_vline(xintercept = 1, colour = "black", linetype = "dashed", size = 0.25)+  # Vertical significance cut-off line (+).
geom_vline(xintercept = -1, colour = "black", linetype = "dashed", size = 0.25)  # Vertical significance cut-off line (+).
ggsave("../../outputs/8_1_VP_General_sinN_T_170Cvs87SS.png")
D2_ER_genes <-subset(df_general, subset= color == "Col_1")
D2_ER_genes$rownames
D2_genes <-subset(df_general, subset= color == "Col_2")
D2_genes$rownames
ER_genes <-subset(df_general, subset= color == "Col_3")
ER_genes$rownames
#Load libraries
library(ggplot2)
library(ggrepel)
#Load data DESeq2 and EdgeR 87ppb
results_DESeq2<- read.delim("../../data/DGE/DESeq2_DSvsDC_FDR_5.txt") ## TENGO ESTO 2 VECES EN LA MISMA TABLA
results_DESeq2<- results_DESeq2[,1:6]
results_Edge<- read.delim("../../data/DGE/EdgeR_DSvsDC_FDR_5.txt")
# Remake tables with info that I want
results_DESeq2_rt <- data.frame(results_DESeq2[,c(2,5,6)])
results_Edge_rt <- data.frame(results_Edge[,c(1,3,4)])
results_DESeq2_rt$sig <- -log10(results_DESeq2$pvalue) ##Create a column with aditional info of FDR (padj)##
results_DESeq2_rt$sigadj <- -log10(results_DESeq2$padj) ##Create a column with aditional info of FDR (padj)##
results_Edge_rt$sig <- -log10(results_Edge$PValue) ##Create a column with aditional info of FDR (padj)##
results_Edge_rt$sigadj <- -log10(results_Edge$FDR) ##Create a column with aditional info of FDR (padj)##
##Create a column with colors depending p-adj##
results_DESeq2_rt$TDE <- (results_DESeq2_rt$padj< 0.05) & (abs(results_DESeq2_rt$log2FoldChange) > 1)
results_Edge_rt$TDE <- (results_Edge_rt$FDR< 0.05) & (abs(results_Edge_rt$logFC) > 1)
# Plot Volcano plot
# Make table with over and down expressed
overxpress_Ds2 <- results_DESeq2_rt[results_DESeq2_rt[,"padj"]< 0.05 & results_DESeq2_rt[,"log2FoldChange"]> 1, ]
downxpress_Ds2 <- results_DESeq2_rt[results_DESeq2_rt[,"padj"]< 0.05 & results_DESeq2_rt[,"log2FoldChange"]< -1, ]
overxpress_Ed <- results_Edge_rt[results_Edge_rt[,"FDR"]< 0.05 & results_Edge_rt[,"logFC"]> 1, ]
downxpress_Ed <- results_Edge_rt[results_Edge_rt[,"FDR"]< 0.05 & results_Edge_rt[,"logFC"]< -1, ]
# Obtain comun genes
genesDEcomun_over <- intersect(rownames(overxpress_Ds2),rownames(overxpress_Ed))
genesDEcomun_down <- intersect(rownames(downxpress_Ds2),rownames(downxpress_Ed))
comun_genes_od <- c(genesDEcomun_over,genesDEcomun_down)
comun_genes_od
# PLOT GENERAL
# To create column with row name
results_DESeq2_rt$rownames <- rownames(results_DESeq2_rt)
results_Edge_rt$rownames <- rownames(results_Edge_rt)
# To create new data frame with differential expression data (DESeq2 and edgeR)
df_general<- merge(results_DESeq2_rt, results_Edge_rt, by = "rownames",  all.x=TRUE)
colnames(df_general)<- c( "rownames","log2FoldChange_D2","pvalue_D2","padj_D2" ,
"sig_D2", "sigadj_D2","TDE_D2","logFC_ER","PValue_ER",
"FDR_ER", "sig_ER", "sigadj_ER","TDE_ER")
df_general$color <- ifelse((df_general$TDE_D2 == TRUE) & (df_general$TDE_ER == TRUE), "Col_1", #DESeq2 and EdgeR
ifelse((df_general$TDE_D2 == TRUE) & (df_general$TDE_ER == FALSE), "Col_2", # Only DESeq2
ifelse((df_general$TDE_D2 == FALSE) & (df_general$TDE_ER == TRUE), "Col_3", # Only EdgeR
ifelse((df_general$TDE_D2 == FALSE) & (df_general$TDE_ER == FALSE), "Col_4", "Col_5"))))# No Differential Expression
rownames(df_general)<- df_general$rownames
# Plot Volcano plot
ggplot(df_general, aes(x=log2FoldChange_D2, y=sig_D2)) +
geom_point(aes(colour =  color ),size =3.5)+
scale_color_manual(values=c("#cd77ca", # purple D2 and ER
"#49cfd8", # blue Only D2
"#cdbd3a", # yellow Only ER
"grey",    # grey
"black"))+ # black
xlab("log2 fold change")+
ylab("-log10 (P value)")+
theme_light(base_size = 10)+
theme(legend.position = "none")+
geom_hline(yintercept = -log10(0.05), colour = "black", linetype = "dashed", size = 0.25) + # Horizontal significance cut-off line.
geom_vline(xintercept = 1, colour = "black", linetype = "dashed", size = 0.25)+  # Vertical significance cut-off line (+).
geom_vline(xintercept = -1, colour = "black", linetype = "dashed", size = 0.25)  # Vertical significance cut-off line (+).
df_general$color <- ifelse((df_general$TDE_D2 == TRUE) & (df_general$TDE_ER == TRUE), "Col_1", #DESeq2 and EdgeR
ifelse((df_general$TDE_D2 == TRUE) & (df_general$TDE_ER == FALSE), "Col_2", # Only DESeq2
ifelse((df_general$TDE_D2 == FALSE) & (df_general$TDE_ER == TRUE), "Col_3", # Only EdgeR
ifelse((df_general$TDE_D2 == FALSE) & (df_general$TDE_ER == FALSE), "Col_4", "Col_5"))))# No Differential Expression
rownames(df_general)<- df_general$rownames
# Plot Volcano plot
ggplot(df_general, aes(x=log2FoldChange_D2, y=sig_D2)) +
geom_point(aes(colour =  color ),size =3.5)+
scale_color_manual(values=c("#cd77ca", # purple D2 and ER
"#49cfd8", # blue Only D2
"#cdbd3a", # yellow Only ER
"grey",    # grey
"black"))+ # black
xlab("log2 fold change")+
ylab("-log10 (P value)")+
theme_light(base_size = 10)+
theme(legend.position = "none")+
geom_hline(yintercept = -log10(0.05), colour = "black", linetype = "dashed", size = 0.25) + # Horizontal significance cut-off line.
geom_vline(xintercept = 1, colour = "black", linetype = "dashed", size = 0.25)+  # Vertical significance cut-off line (+).
geom_vline(xintercept = -1, colour = "black", linetype = "dashed", size = 0.25)  # Vertical significance cut-off line (+).
D2_ER_genes <-subset(df_general, subset= color == "Col_1")
D2_ER_genes$rownames
D2_genes <-subset(df_general, subset= color == "Col_2")
D2_genes$rownames
ER_genes <-subset(df_general, subset= color == "Col_3")
ER_genes$rownames
# Plot Volcano plot
ggplot(df_general, aes(x=log2FoldChange_D2, y=sig_D2)) +
geom_point(aes(colour =  color ),size =3.5)+
scale_color_manual(values=c("#cd77ca", # purple D2 and ER
"#49cfd8", # blue Only D2
"grey",    # grey
"black"))+ # black
xlab("log2 fold change")+
ylab("-log10 (P value)")+
theme_light(base_size = 10)+
theme(legend.position = "none")+
geom_hline(yintercept = -log10(0.05), colour = "black", linetype = "dashed", size = 0.25) + # Horizontal significance cut-off line.
geom_vline(xintercept = 1, colour = "black", linetype = "dashed", size = 0.25)+  # Vertical significance cut-off line (+).
geom_vline(xintercept = -1, colour = "black", linetype = "dashed", size = 0.25)  # Vertical significance cut-off line (+).
ggsave("../../outputs/8_1_VP_General_sinN_D_170Cvs87SS.png")
D2_ER_genes <-subset(df_general, subset= color == "Col_1")
D2_ER_genes$rownames
D2_genes <-subset(df_general, subset= color == "Col_2")
D2_genes$rownames
ER_genes <-subset(df_general, subset= color == "Col_3")
ER_genes$rownames
View(results_Edge)
View(results_Edge_rt)
ER_genes <-subset(df_general, subset= color == "Col_3")
ER_genes$rownames
View(df_general)
#Load libraries
library(ggplot2)
library(ggrepel)
#Load data DESeq2 and EdgeR
results_DESeq2<- read.delim("../../data/DGE/DESeq2_DSvsTS_FDR_5.txt") ## TENGO ESTO 2 VECES EN LA MISMA TABLA
results_DESeq2<- results_DESeq2[,1:6]
results_Edge<- read.delim("../../data/DGE/EdgeR_DSvsTS_FDR_5.txt")
# Remake tables with info that I want
results_DESeq2_rt <- data.frame(results_DESeq2[,c(2,5,6)])
results_Edge_rt <- data.frame(results_Edge[,c(1,3,4)])
results_DESeq2_rt$sig <- -log10(results_DESeq2$pvalue) ##Create a column with aditional info of FDR (padj)##
results_DESeq2_rt$sigadj <- -log10(results_DESeq2$padj) ##Create a column with aditional info of FDR (padj)##
results_Edge_rt$sig <- -log10(results_Edge$PValue) ##Create a column with aditional info of FDR (padj)##
results_Edge_rt$sigadj <- -log10(results_Edge$FDR) ##Create a column with aditional info of FDR (padj)##
##Create a column with colors depending p-adj##
results_DESeq2_rt$TDE <- (results_DESeq2_rt$padj< 0.05) & (abs(results_DESeq2_rt$log2FoldChange) > 1)
results_Edge_rt$TDE <- (results_Edge_rt$FDR< 0.05) & (abs(results_Edge_rt$logFC) > 1)
# Make table with over and down expressed in TOLERANTS
overxpress_Ds2 <- results_DESeq2_rt[results_DESeq2_rt[,"padj"]< 0.05 & results_DESeq2_rt[,"log2FoldChange"]> 1, ]
downxpress_Ds2 <- results_DESeq2_rt[results_DESeq2_rt[,"padj"]< 0.05 & results_DESeq2_rt[,"log2FoldChange"]< -1, ]
overxpress_Ed <- results_Edge_rt[results_Edge_rt[,"FDR"]< 0.05 & results_Edge_rt[,"logFC"]> 1, ]
downxpress_Ed <- results_Edge_rt[results_Edge_rt[,"FDR"]< 0.05 & results_Edge_rt[,"logFC"]< -1, ]
# Obtain comun genes
genesDEcomun_over <- intersect(rownames(overxpress_Ds2),rownames(overxpress_Ed))
genesDEcomun_down <- intersect(rownames(downxpress_Ds2),rownames(downxpress_Ed))
comun_genes_od <- c(genesDEcomun_over,genesDEcomun_down)
comun_genes_od
# PLOT GENERAL
# To create column with row name
results_DESeq2_rt$rownames <- rownames(results_DESeq2_rt)
results_Edge_rt$rownames <- rownames(results_Edge_rt)
# To create new data frame with differential expression data (DESeq2 and edgeR)
df_general<- merge(results_DESeq2_rt, results_Edge_rt, by = "rownames",  all.x=TRUE)
colnames(df_general)<- c( "rownames","log2FoldChange_D2","pvalue_D2","padj_D2" ,
"sig_D2", "sigadj_D2","TDE_D2","logFC_ER","PValue_ER",
"FDR_ER", "sig_ER", "sigadj_ER","TDE_ER")
df_general$color <- ifelse((df_general$TDE_D2 == TRUE) & (df_general$TDE_ER == TRUE), "Col_1", #DESeq2 and EdgeR
ifelse((df_general$TDE_D2 == TRUE) & (df_general$TDE_ER == FALSE), "Col_2", # Only DESeq2
ifelse((df_general$TDE_D2 == FALSE) & (df_general$TDE_ER == TRUE), "Col_3", # Only EdgeR
ifelse((df_general$TDE_D2 == FALSE) & (df_general$TDE_ER == FALSE), "Col_4", "Col_5"))))# No Differential Expression
rownames(df_general)<- df_general$rownames
# Plot Volcano plot
ggplot(df_general, aes(x=log2FoldChange_D2, y=sig_D2)) +
geom_point(aes(colour =  color ),size =3.5)+
scale_color_manual(values=c("#cd77ca", # purple D2 and ER
"#49cfd8", # blue Only D2
"#cdbd3a", # yellow Only ER
"grey",    # grey
"black"))+ # black
xlab("log2 fold change")+
ylab("-log10 (P value)")+
theme_light(base_size = 10)+
theme(legend.position = "none")+
geom_hline(yintercept = -log10(0.05), colour = "black", linetype = "dashed", size = 0.25) + # Horizontal significance cut-off line.
geom_vline(xintercept = 1, colour = "black", linetype = "dashed", size = 0.25)+  # Vertical significance cut-off line (+).
geom_vline(xintercept = -1, colour = "black", linetype = "dashed", size = 0.25)  # Vertical significance cut-off line (+).
ggsave("../../outputs/8_1_VP_General_sinN_S_TvsD.png")
D2_ER_genes <-subset(df_general, subset= color == "Col_1")
D2_ER_genes$rownames
D2_genes <-subset(df_general, subset= color == "Col_2")
D2_genes$rownames
ER_genes <-subset(df_general, subset= color == "Col_3")
ER_genes$rownames
#Load libraries
library(ggplot2)
library(ggrepel)
#Load data DESeq2 and EdgeR
results_DESeq2<- read.delim("../../data/DGE/DESeq2_DSvsTS_FDR_5.txt") ## TENGO ESTO 2 VECES EN LA MISMA TABLA
results_DESeq2<- results_DESeq2[,1:6]
results_Edge<- read.delim("../../data/DGE/EdgeR_DSvsTS_FDR_5.txt")
# Remake tables with info that I want
results_DESeq2_rt <- data.frame(results_DESeq2[,c(2,5,6)])
results_Edge_rt <- data.frame(results_Edge[,c(1,3,4)])
results_DESeq2_rt$sig <- -log10(results_DESeq2$pvalue) ##Create a column with aditional info of FDR (padj)##
results_DESeq2_rt$sigadj <- -log10(results_DESeq2$padj) ##Create a column with aditional info of FDR (padj)##
results_Edge_rt$sig <- -log10(results_Edge$PValue) ##Create a column with aditional info of FDR (padj)##
results_Edge_rt$sigadj <- -log10(results_Edge$FDR) ##Create a column with aditional info of FDR (padj)##
##Create a column with colors depending p-adj##
results_DESeq2_rt$TDE <- (results_DESeq2_rt$padj< 0.05) & (abs(results_DESeq2_rt$log2FoldChange) > 1)
results_Edge_rt$TDE <- (results_Edge_rt$FDR< 0.05) & (abs(results_Edge_rt$logFC) > 1)
# Make table with over and down expressed in TOLERANTS
overxpress_Ds2 <- results_DESeq2_rt[results_DESeq2_rt[,"padj"]< 0.05 & results_DESeq2_rt[,"log2FoldChange"]> 1, ]
downxpress_Ds2 <- results_DESeq2_rt[results_DESeq2_rt[,"padj"]< 0.05 & results_DESeq2_rt[,"log2FoldChange"]< -1, ]
overxpress_Ed <- results_Edge_rt[results_Edge_rt[,"FDR"]< 0.05 & results_Edge_rt[,"logFC"]> 1, ]
downxpress_Ed <- results_Edge_rt[results_Edge_rt[,"FDR"]< 0.05 & results_Edge_rt[,"logFC"]< -1, ]
# Obtain comun genes
genesDEcomun_over <- intersect(rownames(overxpress_Ds2),rownames(overxpress_Ed))
genesDEcomun_down <- intersect(rownames(downxpress_Ds2),rownames(downxpress_Ed))
comun_genes_od <- c(genesDEcomun_over,genesDEcomun_down)
comun_genes_od
# PLOT GENERAL
# To create column with row name
results_DESeq2_rt$rownames <- rownames(results_DESeq2_rt)
results_Edge_rt$rownames <- rownames(results_Edge_rt)
# To create new data frame with differential expression data (DESeq2 and edgeR)
df_general<- merge(results_DESeq2_rt, results_Edge_rt, by = "rownames",  all.x=TRUE)
colnames(df_general)<- c( "rownames","log2FoldChange_D2","pvalue_D2","padj_D2" ,
"sig_D2", "sigadj_D2","TDE_D2","logFC_ER","PValue_ER",
"FDR_ER", "sig_ER", "sigadj_ER","TDE_ER")
df_general$color <- ifelse((df_general$TDE_D2 == TRUE) & (df_general$TDE_ER == TRUE), "Col_1", #DESeq2 and EdgeR
ifelse((df_general$TDE_D2 == TRUE) & (df_general$TDE_ER == FALSE), "Col_2", # Only DESeq2
ifelse((df_general$TDE_D2 == FALSE) & (df_general$TDE_ER == TRUE), "Col_3", # Only EdgeR
ifelse((df_general$TDE_D2 == FALSE) & (df_general$TDE_ER == FALSE), "Col_4", "Col_5"))))# No Differential Expression
rownames(df_general)<- df_general$rownames
# Plot Volcano plot
ggplot(df_general, aes(x=log2FoldChange_D2, y=sig_D2)) +
geom_point(aes(colour =  color ),size =3.5)+
scale_color_manual(values=c("#cd77ca", # purple D2 and ER
"#49cfd8", # blue Only D2
"#cdbd3a", # yellow Only ER
"grey",    # grey
"black"))+ # black
xlab("log2 fold change")+
ylab("-log10 (P value)")+
theme_light(base_size = 10)+
theme(legend.position = "none")+
geom_hline(yintercept = -log10(0.05), colour = "black", linetype = "dashed", size = 0.25) + # Horizontal significance cut-off line.
geom_vline(xintercept = 1, colour = "black", linetype = "dashed", size = 0.25)+  # Vertical significance cut-off line (+).
geom_vline(xintercept = -1, colour = "black", linetype = "dashed", size = 0.25)  # Vertical significance cut-off line (+).
ggsave("../../outputs/8_1_VP_General_sinN_S_TvsD.png")
D2_ER_genes <-subset(df_general, subset= color == "Col_1")
D2_ER_genes$rownames
D2_genes <-subset(df_general, subset= color == "Col_2")
D2_genes$rownames
ER_genes <-subset(df_general, subset= color == "Col_3")
ER_genes$rownames
#Load libraries
library(ggplot2)
library(ggrepel)
#Load data DESeq2 and EdgeR
results_DESeq2<- read.delim("../../data/DGE/DESeq2_TvsD170ppb_FDR_5.txt") ## TENGO ESTO 2 VECES EN LA MISMA TABLA
results_DESeq2<- results_DESeq2[,1:6]
results_Edge<- read.delim("../../data/DGE/EdgeR_TvsD170ppb_FDR_5.txt")
# Remake tables with info that I want
results_DESeq2_rt <- data.frame(results_DESeq2[,c(2,5,6)])
results_Edge_rt <- data.frame(results_Edge[,c(1,3,4)])
results_DESeq2_rt$sig <- -log10(results_DESeq2$pvalue) ##Create a column with aditional info of FDR (padj)##
results_DESeq2_rt$sigadj <- -log10(results_DESeq2$padj) ##Create a column with aditional info of FDR (padj)##
results_Edge_rt$sig <- -log10(results_Edge$PValue) ##Create a column with aditional info of FDR (padj)##
results_Edge_rt$sigadj <- -log10(results_Edge$FDR) ##Create a column with aditional info of FDR (padj)##
##Create a column with colors depending p-adj##
results_DESeq2_rt$TDE <- (results_DESeq2_rt$padj< 0.05) & (abs(results_DESeq2_rt$log2FoldChange) > 1)
results_Edge_rt$TDE <- (results_Edge_rt$FDR< 0.05) & (abs(results_Edge_rt$logFC) > 1)
# Make table with over and down expressed in TOLERANTS
overxpress_Ds2 <- results_DESeq2_rt[results_DESeq2_rt[,"padj"]< 0.05 & results_DESeq2_rt[,"log2FoldChange"]> 1, ]
downxpress_Ds2 <- results_DESeq2_rt[results_DESeq2_rt[,"padj"]< 0.05 & results_DESeq2_rt[,"log2FoldChange"]< -1, ]
overxpress_Ed <- results_Edge_rt[results_Edge_rt[,"FDR"]< 0.05 & results_Edge_rt[,"logFC"]> 1, ]
downxpress_Ed <- results_Edge_rt[results_Edge_rt[,"FDR"]< 0.05 & results_Edge_rt[,"logFC"]< -1, ]
# Obtain comun genes
genesDEcomun_over <- intersect(rownames(overxpress_Ds2),rownames(overxpress_Ed))
genesDEcomun_down <- intersect(rownames(downxpress_Ds2),rownames(downxpress_Ed))
comun_genes_od <- c(genesDEcomun_over,genesDEcomun_down)
comun_genes_od
# PLOT GENERAL
# To create column with row name
results_DESeq2_rt$rownames <- rownames(results_DESeq2_rt)
results_Edge_rt$rownames <- rownames(results_Edge_rt)
# To create new data frame with differential expression data (DESeq2 and edgeR)
df_general<- merge(results_DESeq2_rt, results_Edge_rt, by = "rownames",  all.x=TRUE)
colnames(df_general)<- c( "rownames","log2FoldChange_D2","pvalue_D2","padj_D2" ,
"sig_D2", "sigadj_D2","TDE_D2","logFC_ER","PValue_ER",
"FDR_ER", "sig_ER", "sigadj_ER","TDE_ER")
df_general$color <- ifelse((df_general$TDE_D2 == TRUE) & (df_general$TDE_ER == TRUE), "Col_1", #DESeq2 and EdgeR
ifelse((df_general$TDE_D2 == TRUE) & (df_general$TDE_ER == FALSE), "Col_2", # Only DESeq2
ifelse((df_general$TDE_D2 == FALSE) & (df_general$TDE_ER == TRUE), "Col_3", # Only EdgeR
ifelse((df_general$TDE_D2 == FALSE) & (df_general$TDE_ER == FALSE), "Col_4", "Col_5"))))# No Differential Expression
rownames(df_general)<- df_general$rownames
# Plot Volcano plot
ggplot(df_general, aes(x=log2FoldChange_D2, y=sig_D2)) +
geom_point(aes(colour =  color ),size =3.5)+
scale_color_manual(values=c("#cd77ca", # purple D2 and ER
"#49cfd8", # blue Only D2
"#cdbd3a", # yellow Only ER
"grey",    # grey
"black"))+ # black
xlab("log2 fold change")+
ylab("-log10 (P value)")+
theme_light(base_size = 10)+
theme(legend.position = "none")+
geom_hline(yintercept = -log10(0.05), colour = "black", linetype = "dashed", size = 0.25) + # Horizontal significance cut-off line.
geom_vline(xintercept = 1, colour = "black", linetype = "dashed", size = 0.25)+  # Vertical significance cut-off line (+).
geom_vline(xintercept = -1, colour = "black", linetype = "dashed", size = 0.25)  # Vertical significance cut-off line (+).
ggsave("../../outputs/8_1_VP_General_sinN_C_TvsD.png")
D2_ER_genes <-subset(df_general, subset= color == "Col_1")
D2_ER_genes$rownames
D2_genes <-subset(df_general, subset= color == "Col_2")
D2_genes$rownames
ER_genes <-subset(df_general, subset= color == "Col_3")
ER_genes$rownames
C_TvsD<-read.delim("../../data/Over_Down/GENERAL_C_TvsD.txt", sep="\t", row.names=T)
C_TvsD<-read.delim("../../data/Over_Down/GENERAL_C_TvsD.txt", sep="\t")
View(C_TvsD)
D_170Cvs87SS<-read.delim("../../data/Over_Down/GENERAL_D_170Cvs87SS.txt", sep="\t")
T_170Cvs87SS<-read.delim("../../data/Over_Down/GENERAL_T_170Cvs87SS.txt", sep="\t")
ggplot(df_general, aes(x=log2FoldChange_D2, y=sig_D2)) +
geom_point(aes(colour =  color ),size =3.5)+
scale_color_manual(values=c("#cd77ca", # purple D2 and ER
"#49cfd8", # blue Only D2
"#cdbd3a", # yellow Only ER
"grey",    # grey
"black"))+ # black
xlab("log2 fold change")+
ylab("-log10 (P value)")+
theme_light(base_size = 10)+
theme(legend.position = "none")+
geom_hline(yintercept = -log10(0.05), colour = "black", linetype = "dashed", size = 0.25) + # Horizontal significance cut-off line.
geom_vline(xintercept = 1, colour = "black", linetype = "dashed", size = 0.25)+  # Vertical significance cut-off line (+).
geom_vline(xintercept = -1, colour = "black", linetype = "dashed", size = 0.25)  # Vertical significance cut-off line (+).
ggplot(C_TvsD, aes(x=log2FoldChange_D2, y=sig_D2)) +
geom_point(aes(colour =  color ),size =3.5)+
scale_color_manual(values=c("#cd77ca", # purple D2 and ER
"#49cfd8", # blue Only D2
"#cdbd3a", # yellow Only ER
"grey",    # grey
"black"))+ # black
xlab("log2 fold change")+
ylab("-log10 (P value)")+
theme_light(base_size = 10)+
theme(legend.position = "none")+
geom_hline(yintercept = -log10(0.05), colour = "black", linetype = "dashed", size = 0.25) + # Horizontal significance cut-off line.
geom_vline(xintercept = 1, colour = "black", linetype = "dashed", size = 0.25)+  # Vertical significance cut-off line (+).
geom_vline(xintercept = -1, colour = "black", linetype = "dashed", size = 0.25)  # Vertical significance cut-off line (+).
ggplot(D_170Cvs87SS, aes(x=log2FoldChange_D2, y=sig_D2)) +
geom_point(aes(colour =  color ),size =3.5)+
scale_color_manual(values=c("#cd77ca", # purple D2 and ER
"#49cfd8", # blue Only D2
"#cdbd3a", # yellow Only ER
"grey",    # grey
"black"))+ # black
xlab("log2 fold change")+
ylab("-log10 (P value)")+
theme_light(base_size = 10)+
theme(legend.position = "none")+
geom_hline(yintercept = -log10(0.05), colour = "black", linetype = "dashed", size = 0.25) + # Horizontal significance cut-off line.
geom_vline(xintercept = 1, colour = "black", linetype = "dashed", size = 0.25)+  # Vertical significance cut-off line (+).
geom_vline(xintercept = -1, colour = "black", linetype = "dashed", size = 0.25)  # Vertical significance cut-off line (+).
ggplot(T_170Cvs87SS, aes(x=log2FoldChange_D2, y=sig_D2)) +
geom_point(aes(colour =  color ),size =3.5)+
scale_color_manual(values=c("#cd77ca", # purple D2 and ER
"#49cfd8", # blue Only D2
"#cdbd3a", # yellow Only ER
"grey",    # grey
"black"))+ # black
xlab("log2 fold change")+
ylab("-log10 (P value)")+
theme_light(base_size = 10)+
theme(legend.position = "none")+
geom_hline(yintercept = -log10(0.05), colour = "black", linetype = "dashed", size = 0.25) + # Horizontal significance cut-off line.
geom_vline(xintercept = 1, colour = "black", linetype = "dashed", size = 0.25)+  # Vertical significance cut-off line (+).
geom_vline(xintercept = -1, colour = "black", linetype = "dashed", size = 0.25)  # Vertical significance cut-off line (+).
library(ggplot2)
library("ggpubr")
install.packages("ggpubr")
install.packages("tidyverse")
library(ggplot2)
library(ggpubr)
library(ggpubr)
install.packages("ggpubr")
library(ggpubr)
install.packages("curl")
install.packages("dplyr")
install.packages("devtools")
devtools::install_github("hadley/devtools")
install.packages("devtools")
install.packages("devtools")
devtools::install_github(repo = "r-lib/devtools",
dependencies = TRUE,
upgrade = TRUE)
if (!require("devtools")) install.packages("devtools")
devtools::install_github("rstudio/httpuv")
source("https://bioconductor.org/biocLite.R")
install.packages("devtools", dependencies=TRUE)
if (!requireNamespace("BiocManager", quietly=TRUE))
install.packages("BiocManager")
BiocManager::install(version = "devel")
r
R
